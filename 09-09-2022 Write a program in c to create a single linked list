Write a program in c to create a single linked list insertion at the end.

#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *link; 
}*head;
void createList(int n);
void insertNodeAtEnd(int data);
void displayList();
int main()
{
    int n, data;
    printf("Enter the total number of nodes: ");
    scanf("%d", &n);
    createList(n);
    printf("\nEnter data to insert at end of the list: ");
    scanf("%d", &data);
    insertNodeAtEnd(data);
    printf("\nData in the list \n");
    displayList();
    return 0;
}
void createList(int n)
{
    struct node *newNode, *temp;
    int data, i;
    head = (struct node *)malloc(sizeof(struct node));
    if(head == NULL)
    {
        printf("Unable to allocate memory.");
    }
    else
    {
        printf("Enter the values:\n");
        scanf("%d", &data);
        head->data = data;
        head->link = NULL;
        temp = head;
        for(i=2;i<=n;i++)
        {
            newNode=(struct node*)malloc(sizeof(struct node));
            if(newNode==NULL)
            {
                printf("Unable to allocate memory.");
                break;
            }
            else
            {
                scanf("%d", &data);
                newNode->data = data;
                newNode->link = NULL;
                temp->link = newNode;
                temp = temp->link; 
            }
        }

        printf("SINGLY LINKED LIST CREATED SUCCESSFULLY\n");
    }
}

void insertNodeAtEnd(int data)
{
    struct node *newNode, *temp;
    newNode = (struct node*)malloc(sizeof(struct node));
    if(newNode == NULL)
    {
        printf("Unable to allocate memory.");
    }
    else
    {
        newNode->data = data;
        newNode->link = NULL; 
        temp = head;
        while(temp!=NULL&&temp->link!=NULL)
            temp = temp->link;
        temp->link=newNode;
        printf("DATA INSERTED SUCCESSFULLY\n");
    }
}

void displayList()
{
    struct node *temp;
    if(head==NULL)
    {
        printf("List is empty.");
    }
    else
    {
        temp=head;
        while(temp!=NULL)
        {
            printf("%d\n",temp->data);
            temp = temp->link;
        }
    }
}

output:
Enter the total number of nodes: 5
Enter the values:
1
2
3
4
5
SINGLY LINKED LIST CREATED SUCCESSFULLY

Enter data to insert at end of the list: 6
DATA INSERTED SUCCESSFULLY

Data in the list 
1
2
3
4
5
6
